{"version":3,"file":"static/js/142.7c9430ed.chunk.js","mappings":"sPAEMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,yFAEGC,EAAa,IAAIC,gBAFpB,SAGoBC,EAAAA,EAAAA,QAAA,UAAiBN,EAAjB,iCAAkDC,EAAlD,kBAAmEE,GAC1F,CAAEI,OAAQH,EAAWG,SAJlB,cAGGC,EAHH,yBAOIA,EAASC,KAAKC,SAPlB,gH,aCkCP,EAnCqB,WACnB,IAAMC,GAAYC,EAAAA,EAAAA,QAAO,MACzB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAY,mCAAG,WAAOC,GAAP,gFACnBA,EAAEC,iBACIC,EAASZ,EAAUa,QAAQC,MAFd,SAIjBR,GAAW,GACXE,GAAS,GALQ,SAMWjB,EAAiBqB,GAN5B,OAMXG,EANW,OAOjBX,EAAUW,GAPO,kDASjBP,GAAS,GATQ,yBAWjBF,GAAW,GAXM,6EAAH,sDAelB,OACE,kBAAMU,SAAUP,EAAhB,WACE,kBAAOQ,QAAQ,YACf,kBAAOC,KAAK,OAAOC,KAAK,SAASC,GAAG,SAASC,IAAKrB,KAClD,mBAAQkB,KAAK,SAAb,oBACCX,IAAS,uDACTF,IAAW,2CACXF,EAAOmB,OAAS,IAAK,SAACC,EAAA,EAAD,CAAWpB,OAAQA,MAG9C,ECKD,EAtCqB,WAEnB,OAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOU,EAAP,KACA,GADA,MAC4BV,EAAAA,EAAAA,UAAS,KAArC,eAAOC,EAAP,KAAeC,EAAf,KAEA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAsBA,OApBAgB,EAAAA,EAAAA,YAAU,WACR,IAAM/B,EAAa,IAAIC,gBADT,wCAEd,WAAyBkB,GAAzB,uFAEIN,GAAW,GACXE,GAAS,GAHb,SAIgCjB,EAAiBqB,GAJjD,OAIUG,EAJV,OAKIX,EAAUW,GALd,gDAOIP,GAAS,GAPb,yBASIF,GAAW,GATf,4EAFc,wBAiBd,OAjBc,oCAedmB,GAEO,kBAAMhC,EAAWiC,OAAjB,CACR,GAAE,CAACd,KAGF,gCACGL,IAAS,uDACTF,IAAW,2CACXF,EAAOmB,OAAS,IAAK,SAACC,EAAA,EAAD,CAAWpB,OAAQA,MAG9C,EC3BD,EATsB,SAACA,EAAQS,GAC7B,OACE,iCACE,SAACe,EAAD,IACCxB,IAAWS,IAAU,SAAC,EAAD,MAG3B,C","sources":["shared/APIs/movieBySearch.js","components/searchForm/SearchForm.jsx","modules/searchMovies/SearchMovies.jsx","pages/movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'df510edfce68ed3b1f6165b74448260e';\n\nexport async function getMovieBySearch(params){\n  try {\n    const controller = new AbortController();\n    const response = await axios.request(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${params}`,\n    { signal: controller.signal }\n    )\n    // console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    \n  }\n}","import React, { useRef, useState } from 'react';\nimport MovieList from 'components/movieList/MovieList';\nimport { getMovieBySearch } from 'shared/APIs/movieBySearch';\n\nconst SearchMovies = () => {\n  const searchRef = useRef(null);\n  const [movies, setMovies] = useState([]);\n  // eslint-disable-next-line\n  const [loading, setLoading] = useState(false);\n  // eslint-disable-next-line\n  const [error, setError] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const target = searchRef.current.value;\n    try {\n      setLoading(true);\n      setError(false);\n      const fetchedMovies = await getMovieBySearch(target);\n      setMovies(fetchedMovies);\n    } catch (error) {\n      setError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"search\"></label>\n      <input type=\"text\" name=\"search\" id=\"search\" ref={searchRef} />\n      <button type=\"submit\">Submit</button>\n      {error && <p>Sorry, something went wrong</p>}\n      {loading && <p>Data is loading</p>}\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </form>\n  );\n};\n\nexport default SearchMovies;\n","import { getMovieBySearch } from 'shared/APIs/movieBySearch';\nimport React, { useEffect, useState } from 'react';\nimport MovieList from 'components/movieList/MovieList';\n\nconst SearchMovies = () => {\n  // eslint-disable-next-line\n  const [target, setTarget] = useState('');\n  const [movies, setMovies] = useState([]);\n  // eslint-disable-next-line\n  const [loading, setLoading] = useState(false);\n  // eslint-disable-next-line\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function getMovies(target) {\n      try {\n        setLoading(true);\n        setError(false);\n        const fetchedMovies = await getMovieBySearch(target);\n        setMovies(fetchedMovies);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    getMovies();\n\n    return () => controller.abort();\n  }, [target]);\n\n  return (\n    <>\n      {error && <p>Sorry, something went wrong</p>}\n      {loading && <p>Data is loading</p>}\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default SearchMovies;\n","import SearchForm from 'components/searchForm/SearchForm';\nimport SearchMovies from 'modules/searchMovies/SearchMovies';\nimport React from 'react';\n\nexport const Movies = (movies, target) => {\n  return (\n    <>\n      <SearchForm />\n      {movies === target && <SearchMovies />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","getMovieBySearch","params","controller","AbortController","axios","signal","response","data","results","searchRef","useRef","useState","movies","setMovies","loading","setLoading","error","setError","handleSubmit","e","preventDefault","target","current","value","fetchedMovies","onSubmit","htmlFor","type","name","id","ref","length","MovieList","useEffect","getMovies","abort","SearchForm"],"sourceRoot":""}