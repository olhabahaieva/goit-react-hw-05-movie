{"version":3,"file":"static/js/289.43f46437.chunk.js","mappings":"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","sources":["shared/APIs/movieCastAPI.js","webpack://react-homework-template/./src/components/movieCastInfo/MovieCastInfo.module.css?b487","components/movieCastInfo/MovieCastInfo.jsx","components/movieCast/MovieCast.jsx","shared/APIs/movieReviewsAPI.js","webpack://react-homework-template/./src/components/movieReviewsInfo/MovieReviews.module.css?46c1","components/movieReviewsInfo/MovieReviewsInfo.jsx","components/movieReviews/MovieReviews.jsx","webpack://react-homework-template/./src/components/movieInfo/MovieInfo.module.css?04ed","components/movieInfo/MovieInfo.jsx","shared/APIs/movieDetailsAPI.js","pages/movieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'df510edfce68ed3b1f6165b74448260e';\n\nasync function getMovieCast(movieId) {\n  try {\n    // const controller = new AbortController();\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n      // { signal: controller.signal }\n    );\n\n    // console.log(response.data.cast);\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n}\n\nexport default getMovieCast;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"MovieCastInfo_card__GTUIC\",\"boldText\":\"MovieCastInfo_boldText__vx+hf\"};","import React from 'react';\nimport css from './MovieCastInfo.module.css';\nimport myImage from 'images/myImage.jpg';\nimport PropTypes from 'prop-types';\n\nexport const MovieCastInfo = ({ movie }) => {\n  const children = movie.map(el => (\n    <li key={el.cast_id || el.id}>\n      <img\n        src={el.profile_path ? `https://image.tmdb.org/t/p/w200/${el.profile_path}` : myImage}\n        alt={el.name}\n      />\n      <p className={css.boldText}>{el.name}</p>\n      <p>{el.character}</p>\n    </li>\n  ));\n  return <ul className={css.card}>{children}</ul>;\n};\n\nMovieCastInfo.propTypes = {\n  movie: PropTypes.array,\n}\n\nexport default MovieCastInfo;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getMovieCast from 'shared/APIs/movieCastAPI';\nimport MovieCastInfo from 'components/movieCastInfo/MovieCastInfo';\n\nexport const MovieCast = () => {\n  const [movie, setMovie] = useState();\n  const { movieId } = useParams();\n//   console.log(movieId);\n\n  useEffect(() => {\n    async function getCast() {\n      try {\n        const fetchedMovies = await getMovieCast(movieId);\n        setMovie(fetchedMovies);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getCast();\n  }, [movieId]);\n\n  return <div>{movie && <MovieCastInfo movie={movie}/>}</div>;\n};\n\nexport default MovieCast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'df510edfce68ed3b1f6165b74448260e';\n\nasync function getMovieReviews(movieId) {\n  try {\n    // const controller = new AbortController();\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n      // { signal: controller.signal }\n    );\n\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n}\n\nexport default getMovieReviews;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieReviews_list__Golf3\",\"boldText\":\"MovieReviews_boldText__wU1gz\"};","import React from 'react';\nimport css from './MovieReviews.module.css';\n\nconst MovieReviewsInfo = ({ movie }) => {\n  // console.log(movie);\n  return (\n    <ul className={css.list}>\n      {movie.map(el => (\n        <li key={el.id}>\n          <p className={css.boldText}>{el.author}</p>\n          <p>{el.content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieReviewsInfo;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getMovieReviews from 'shared/APIs/movieReviewsAPI';\nimport MovieReviewsInfo from 'components/movieReviewsInfo/MovieReviewsInfo';\n\nexport const MovieReviews = () => {\n  const [movie, setMovie] = useState();\n  const { movieId } = useParams();\n//   console.log({ movieId })\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        const fetchedReviews = await getMovieReviews(movieId);\n        setMovie(fetchedReviews);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getReviews();\n  }, [movieId]);\n  //   console.log(movie);\n  return <div>{movie && <MovieReviewsInfo movie={movie} />}</div>;\n};\n\nexport default MovieReviews;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"MovieInfo_card__G8bhv\",\"cardMain\":\"MovieInfo_cardMain__I1Y6m\",\"info\":\"MovieInfo_info__EQV9k\",\"boldText\":\"MovieInfo_boldText__uE5CV\",\"line\":\"MovieInfo_line__u3d3j\",\"genres\":\"MovieInfo_genres__+vt12\"};","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport css from './MovieInfo.module.css';\nimport MovieCast from 'components/movieCast/MovieCast';\nimport MovieReviews from 'components/movieReviews/MovieReviews';\n\nexport const MovieInfo = ({ movie }) => {\n  const [showMovieCast, setShowMovieCast] = useState(false);\n  const[showMovieReviews, setShowMovieReviews] = useState(false);\n\n  const handleShowMovieCast = () => {\n    setShowMovieCast((prevShowMovieCast) => !prevShowMovieCast);\n  };\n\n  const handleShowMovieReviews = () =>{\n    setShowMovieReviews((prevshowMovieReviews)=> !prevshowMovieReviews);\n  };\n\n  return (\n    <div className={css.card}>\n      <div className={css.cardMain}>\n        <img\n          src={`https://image.tmdb.org/t/p/w400/${movie.poster_path}`}\n          alt={movie.title}\n        />\n        <div>\n          <h1>{movie.title}</h1>\n          <p>User Score: {movie.vote_average}</p>\n          <p className={css.boldText}>Overview</p>\n          <p>{movie.overview}</p>\n          <p className={css.boldText}>Genres</p>\n          {movie.genres.map(genre => (\n            <ul className={css.genres} key={genre.id}>\n              <li>{genre.name}</li>\n            </ul>\n          ))}\n          <p>{movie.genre_ids}</p>\n        </div>\n      </div>\n      <div className={css.info}>\n        <div className={css.line}></div>\n        <p>Additional Information</p>\n        <Link to=\"cast\" onClick={handleShowMovieCast}>Cast</Link>\n        <Link to=\"reviews\" onClick={handleShowMovieReviews}>Reviews</Link>\n        <div className={css.line}></div>\n        {showMovieCast && <MovieCast movie={movie} />}\n        {showMovieReviews && <MovieReviews movie={movie}/>}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'df510edfce68ed3b1f6165b74448260e';\n\nasync function getMovieDetails(movieId) {\n  try {\n    const controller = new AbortController();\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`,\n      { signal: controller.signal }\n    );\n\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default getMovieDetails;\n","import MovieInfo from 'components/movieInfo';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport getMovieDetails from 'shared/APIs/movieDetailsAPI';\n\n\nexport const MovieDetails = () => {\n  // console.log(movie);\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const prevPageLocation = location.state?.from || \"/\";\n\n  const goBack = () => navigate(prevPageLocation);\n\n  useEffect(() => {\n    async function getMovie() {\n      try {\n        const fetchedMovie = await getMovieDetails(movieId);\n        setMovie(fetchedMovie);\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    getMovie();\n  }, [movieId]);\n \n  return (\n    <div>\n      <button type=\"button\" onClick={goBack} text=\"Go Back\">Go Back</button>\n      {movie && <MovieInfo movie={movie} />}\n    </div>\n  );\n  \n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","getMovieCast","movieId","axios","response","data","cast","console","log","children","movie","map","el","src","profile_path","myImage","alt","name","className","css","character","cast_id","id","MovieCast","useState","setMovie","useParams","useEffect","fetchedMovies","getCast","getMovieReviews","results","author","content","MovieReviews","fetchedReviews","getReviews","showMovieCast","setShowMovieCast","showMovieReviews","setShowMovieReviews","poster_path","title","vote_average","overview","genres","genre","genre_ids","to","onClick","prevShowMovieCast","prevshowMovieReviews","getMovieDetails","controller","AbortController","signal","MovieDetails","navigate","useNavigate","prevPageLocation","useLocation","state","from","fetchedMovie","getMovie","type","text"],"sourceRoot":""}